type: '*redisreceiver.Config'
doc: |
  ScraperControllerSettings defines common settings for a scraper controller
  configuration. Scraper controller receivers can embed this struct, instead
  of config.ReceiverSettings, and extend it with more fields if needed.
fields:
- name: collection_interval
  type: time.Duration
  kind: int64
  default: 10s
- name: endpoint
  kind: string
  default: ""
  doc: |
    Endpoint configures the address for this network connection.
    For TCP and UDP networks, the address has the form "host:port". The host must be a literal IP address,
    or a host name that can be resolved to IP addresses. The port must be a literal port number or a service name.
    If the host is a literal IPv6 address it must be enclosed in square brackets, as in "[2001:db8::1]:80" or
    "[fe80::1%zone]:80". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.
- name: transport
  kind: string
  default: tcp
  doc: |
    Transport to use. Known protocols are "tcp", "tcp4" (IPv4-only), "tcp6" (IPv6-only), "udp", "udp4" (IPv4-only),
    "udp6" (IPv6-only), "ip", "ip4" (IPv4-only), "ip6" (IPv6-only), "unix", "unixgram" and "unixpacket".
- name: password
  kind: string
  default: ""
  doc: |
    Optional password. Must match the password specified in the
    requirepass server configuration option.
- name: tls
  type: configtls.TLSClientSetting
  kind: struct
  doc: |
    TLSClientSetting contains TLS configurations that are specific to client
    connections in addition to the common configurations. This should be used by
    components configuring TLS client connections.
  fields:
  - name: ca_file
    kind: string
    default: ""
    doc: |
      Path to the CA cert. For a client this verifies the server certificate.
      For a server this verifies client certificates. If empty uses system root CA.
      (optional)
  - name: cert_file
    kind: string
    default: ""
    doc: |
      Path to the TLS cert to use for TLS required connections. (optional)
  - name: key_file
    kind: string
    default: ""
    doc: |
      Path to the TLS key to use for TLS required connections. (optional)
  - name: min_version
    kind: string
    default: ""
    doc: |
      MinVersion sets the minimum TLS version that is acceptable.
      If not set, TLS 1.2 will be used. (optional)
  - name: max_version
    kind: string
    default: ""
    doc: |
      MaxVersion sets the maximum TLS version that is acceptable.
      If not set, refer to crypto/tls for defaults. (optional)
  - name: reload_interval
    type: time.Duration
    kind: int64
    doc: |
      ReloadInterval specifies the duration after which the certificate will be reloaded
      If not set, it will never be reloaded (optional)
  - name: insecure
    kind: bool
    default: true
    doc: |
      In gRPC when set to true, this is used to disable the client transport security.
      See https://godoc.org/google.golang.org/grpc#WithInsecure.
      In HTTP, this disables verifying the server's certificate chain and host name
      (InsecureSkipVerify in the tls Config). Please refer to
      https://godoc.org/crypto/tls#Config for more information.
      (optional, default false)
  - name: insecure_skip_verify
    kind: bool
    default: false
    doc: |
      InsecureSkipVerify will enable TLS but not verify the certificate.
  - name: server_name_override
    kind: string
    default: ""
    doc: |
      ServerName requested by client for virtual hosting.
      This sets the ServerName in the TLSConfig. Please refer to
      https://godoc.org/crypto/tls#Config for more information. (optional)
- name: metrics
  type: metadata.MetricsSettings
  kind: struct
  doc: |
    MetricsSettings provides settings for redisreceiver metrics.
  fields:
  - name: redis.clients.blocked
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.connected
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.max_input_buffer
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.clients.max_output_buffer
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.cmd.calls
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.cmd.usec
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.commands
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.commands.processed
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.connections.received
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.connections.rejected
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.cpu.time
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.avg_ttl
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.expires
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.db.keys
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keys.evicted
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keys.expired
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keyspace.hits
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.keyspace.misses
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.latest_fork
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.maxmemory
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.memory.fragmentation_ratio
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.lua
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.peak
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.rss
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.memory.used
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.net.input
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.net.output
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.rdb.changes_since_last_save
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.replication.backlog_first_byte_offset
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.replication.offset
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.role
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: false
  - name: redis.slaves.connected
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
  - name: redis.uptime
    type: metadata.MetricSettings
    kind: struct
    doc: |
      MetricSettings provides common settings for a particular metric.
    fields:
    - name: enabled
      kind: bool
      default: true
